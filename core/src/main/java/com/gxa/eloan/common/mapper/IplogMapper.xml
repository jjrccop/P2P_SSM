<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gxa.eloan.common.mapper.IplogMapper" >
  <resultMap id="BaseResultMap" type="com.gxa.eloan.common.domain.Iplog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="logintime" property="logintime" jdbcType="TIMESTAMP" />
    <result column="usertype" property="usertype" jdbcType="TINYINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="logininfoid" property="logininfoid" jdbcType="BIGINT" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `iplog`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.gxa.eloan.common.domain.Iplog" useGeneratedKeys="true" keyProperty="id" >
    insert into `iplog` (ip, username, logintime, 
      usertype, state, logininfoid)
    values (#{ip,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, #{logintime,jdbcType=TIMESTAMP}, 
      #{usertype,jdbcType=TINYINT}, #{state,jdbcType=TINYINT}, #{logininfoid,jdbcType=BIGINT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.gxa.eloan.common.domain.Iplog" >
    update `iplog`
    set ip = #{ip,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      logintime = #{logintime,jdbcType=TIMESTAMP},
      usertype = #{usertype,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      logininfoid = #{logininfoid,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, ip, username, logintime, usertype, state, logininfoid
    from `iplog`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select id, ip, username, logintime, usertype, state, logininfoid
    from `iplog`
    where id = (select max(id)
    from `iplog`) and username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, ip, username, logintime, usertype, state, logininfoid
    from `iplog`
  </select>
  <sql id="base_column">
  	id, ip, state, userName, logininfoid,loginTime,userType
  </sql>

  <sql id="base_where">
    <where>
      <if test="beginDate!=null">
        AND loginTime &gt;= #{beginDate}
      </if>
      <if test="endDate!=null">
        AND loginTime &lt;= #{endDate}
      </if>
      <if test="userType>-1">
        AND userType = #{userType}
      </if>
      <if test="state>-1">
        AND state = #{state}
      </if>
      <if test="username!=null">
        AND username = #{username}
      </if>
    </where>
  </sql>

  <select id="queryForCount" resultType="int">
    SELECT count(id)
    FROM iplog
    <include refid="base_where"/>
  </select>

  <select id="query" resultMap="BaseResultMap">
    SELECT
    <include refid="base_column"/>
    FROM iplog
    <include refid="base_where"/>
    ORDER BY loginTime DESC
    LIMIT #{start},#{pageSize}
  </select>


</mapper>